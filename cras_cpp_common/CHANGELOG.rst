^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Changelog for package cras_cpp_common
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

2.0.1 (2022-08-26)
------------------
* Added LICENSE file.
* Improved node_from_nodelet to use node logger instead of nodelet logger.
* Added Github Actions CI.
* Increased test coverage, fixed bug in filter diagnostics.
* tf2_utils: Added convenience methods getRoll(), getPitch() and getYaw().
* filter_utils: Adapt to upstream changes adding FilterChain::getFilters() method.
* string_utils: Allowed to limit replace() only to the beginning or end of the string.
* string_utils: Added parseDouble() and friends.
* node_from_nodelet.cmake: Made autogenerated target names less prone to naming conflicts.
* Added more logging function variants.
* Added support for std::string format in LogHelper.
* Fix logging macros to log under correct rosconsole logger.
* Added cras_node_from_nodelet() CMake function.
* Better support for custom data types in getParam() functions.
* Rename test targets so that their names do not conflict with other projects.
* Compatibility with GCC 9+.
* Fixed invalid rate conversion.
* Backwards compatibility for StatefulNodelet::shutdown().
* Improved CMakeLists.txt and header guard placement.
* Merged cras_nodelet_topic_tools with cras_topic_tools, moved repeater and joy_repeater from cras_cpp_common to cras_topic_tools.
* Implemented rate limiters.
* Refactored nodelet_manager_sharing_tf_buffer and added tests for it.
* Added urdf_utils.h.
* Improved tf2_sensor_msgs.h and added test.
* Improved set_utils.hpp.
* Added better shim for std::optional. It now provides all relevant features.
* Added more diagnostics to filter_chain_nodelet.hpp.
* Added shim for std::bind_front into functional.hpp.
* Added running_stats.hpp implementing Welford's running mean and variance computation.
* Improved filter_chain_nodelet.hpp, added tests.
* Improved cloud.hpp, added tests.
* Reorganize filter_utils directory structure.
* Improved the interface of diag_utils and node_utils, added tests. Added message_utils.
* Improved the interface of nodelet_utils, added tests. Added thread_utils with tests.
* XmlRpcValue docs and code reliability.
* Better test coverage of param_utils. Improved Eigen getParam() interface.
* Improved getParam() behavior, added test_param_utils.
* First part of upgrade: log_utils, param_utils, filter_utils, node_utils, xmlrpc, cloud.

1.0.0
-----
* Added XmlRpcValueTraits and issue an error when getParam() finds a parameter value but it has an incompatible type.
* Made FilterBase getParam() functions const.
  Allowed by https://github.com/ros/filters/pull/35 (released in Melodic filters 1.8.2 (October 2021) and Noetic filters 1.9.1 (September 2021)).
* Fixed diagnosed publisher creation scripts
* Little fixes, added pool allocator helpers.
* Improved diagnostics
* Fix compilation with gcc 8
* Fix for systems with old versions of diagnostic_updater
* Compatibility with diagnostic_updater 1.9.6 and newer.
* Fixed memory corruption by cras::transformOnlyChannels().
* Improve lazy subscription behavior in filter_chain_nodelet.hpp
* Fixed SEVERE_WARNING in nodelet_manager_sharing_tf_buffer.
* Fixed segfaults when unloading NodeletWithDiagnostics.
* node_utils: added paramsForNodeHandle()
* Moved filter_chain_nodelet from nifti_laser_filtering to here.
* Added missing diag functions.
* Added missing nodelet logging macros.
* Refactored param_utils to be also usable in filters.
* Small refactoring of CMakeLists.txt and related stuff, modernize header guards.
* Fixed reading of hierarchical parameters in diag_utils.hpp.
* Added diagnostics utils.
* Reworked getParam helpers, added some more utility functions.
* Added NodeletWithDiagnostics trait.
* Added utilities for working with pointclouds - generic iterator, transformOnlyChannels() and more utility functions.
* Added docs.
* Added NodeletWithSharedTfBuffer::usesSharedBuffer().
* Little fixes, verified that Eigen compiles using AVX instructions.
* Added a mixin for nodelets which share a tf buffer with their nodelet manager (and added that custom manager, too).
* Forced tf2_sensor_msgs cloud transform tools to utilize SIMD instructions.
* Improved nodelet_utils, converted all convenience functions into mixins that can be side-loaded to any class.
* Separated nodelet param loading to a separate class so that it can be utilized even in nodelets that are not descendants of cras::Nodelet().
* Added tf2_sensor_msgs with transformWithChannels() function to help correctly transforming pointclouds.
* Remove build warning.
* Fixed to_string() for collections so that it doesn't include the separator after the last item.
* Added getParamVerboseSet() to filter_utils.hpp
* Repeater and specific joy repeater.
* Topic repeater node (every period, instant republish option).
* Added CMake module for using the most modern C++ filesystem API available.
* Added to_string(bool) to string_utils.hpp
* filter_utils: Added support for disabling filters during runtime.
* Added to_string<std::set>()
* Added tf2_utils.
* Added ros::Time to_string.
* filter_utils: Added a possibility to specify a callback in FilterChain that is called after application of each filter.
* nodelet_utils: Added shutdown() method meant to be called from destructors.
* nodelet_utils: Added option to use nodelet-aware canTransform
* nodelet_utils: Added updateThreadName().
* Added nodelet utils.
* Added set utils.
* Added math utils.
* Added inline modifiers to avoid multiple definitions issues.
* Added std::string - const char* interop overload to getParam.
* Moved cras_cpp_common from subt/tradr-robot/tradr-resources.
* added string_utils::to_string(XmlRpc::XmlRpcValue)
* topic_utils -> string_utils, added string_utils::to_string
* Fixed bad design of filter_utils.
* added ros::Duration specializations for node_utils::getParam() and filter_utils::getParam().
* Added filter_utils, time_utils, topic_utils, added unsigned specializations for node_utils::getParam().
* Added cras_cpp_common.
* Contributors: Martin Pecka, Tomas Petricek
