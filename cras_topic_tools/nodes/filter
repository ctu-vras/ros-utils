#!/usr/bin/env python

from __future__ import print_function

import sys

import rospy
from roslib.message import get_message_class

pub = None


def cb(anymsg):
    global pub
    if pub is None:
        cls = get_message_class(anymsg._connection_header['type'])
        pub = rospy.Publisher("out", cls, queue_size=rospy.get_param("~out_queue_size", 10))
    else:
        cls = pub.data_class
    msg = cls().deserialize(anymsg._buff)
    if filter_fn(msg):
        pub.publish(anymsg)


if __name__ == "__main__":
    rospy.init_node('filter', anonymous=True)

    argv = rospy.myargv()
    if len(argv) != 2:
        print("Usage: filter 'filter expression'\n\n"
              "Topics:\n"
              "  in: input data\n"
              "  out: output data\n\n"
              "Use __import__('module').function() if you need to import modules", file=sys.stderr)
        sys.exit(1)

    filter_fn_str = argv[1]

    def filter_fn(m):
        return eval(filter_fn_str)

    sub = rospy.Subscriber('in', rospy.AnyMsg, cb, queue_size=rospy.get_param("~in_queue_size", 10))
    rospy.spin()
